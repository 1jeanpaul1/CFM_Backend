swagger: '2.0'
info:
  description: Community Fridge Map Api
  version: 1.0.0
  title: Community Fridge Map Api
  # put the contact info for your development or API team
  contact:
    email: info@collectivefocus.site

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: fridge
  description: Operations for the fridges

paths:
  /v1/fridges/{fridge_state}/{fridge_name}:
    get:
      tags:
      - fridge
      summary: gets fridge data
      operationId: getFridge
      description: |
        Gets all the fridge data for one fridge
      produces:
      - application/json
      parameters:
      - in: path
        name: fridge_state
        description: the fridge_state where the fridge is located
        required: true
        type: string
      - in: path
        name: fridge_name
        description: the name of the fridge
        required: true
        type: string
      responses:
        200:
          description: fridge was found
          schema:
            type: array
            items:
              $ref: '#/definitions/FridgeItemResponse'
        404:
          description: fridge was not found
        500:
          description: Unexpected Error
  /v1/fridges:
    get:
      tags:
        - fridge
      summary: gets location data for fridges
      operationId: getFridges
      produces:
        - application/json
      parameters:
      - in: query
        name: tags
        description: fridge tags
        required: false
        type: string
      - in: query
        name: fridge_state
        description: fridge state
        required: false
        type: string
      responses:
        200:
          description: fridges were found
          schema:
            type: array
            items:
              $ref: '#/definitions/FridgeLocationItem'
        404:
          description: fridges were not found
        500:
          description: Unexpected Error
    post:
      tags:
        - fridge
      summary: adds a fridge
      operationId: addFridge
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Fridge Information
          required: true
          schema:
            $ref: '#/definitions/FridgeItemRequest'
      responses:
        200:
          description: Fridge was added successfully
        400:
          description: Bad Request
        409:
          description: Fridge already exists
        500:
          description: Unexpected Error
    put:
      tags:
        - fridge
      summary: updates a fridge
      operationId: updateFridge
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Update Fridge Information
          required: false
          schema:
            $ref: '#/definitions/FridgeItemRequest'
      responses:
        200:
          description: Fridge was updated successfully
        400:
          description: Bad Request
        404:
          description: Fridge not found, unable to do an edit on a fridge that does not exist
        500:
          description: Unexpected Error


  /v1/fridges/checkin:
    post:
      tags:
        - fridge
      summary: status update for a fridge
      operationId: fridgeCheckIn
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Fridge Check In
          required: true
          schema:
            $ref: '#/definitions/FridgeCheckInRequest'
      responses:
        200:
          description: Check-In was posted successfully
        404:
          description: Fridge not found, unable to do a status update on a fridge that does not exist
        400:
          description: Bad Request
        500:
          description: Unexpected Error

  /v1/fridges/upload_image:
    post:
      tags:
        - fridge
      summary: upload an image
      operationId: uploadImage
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name: body
        description: Image Upload
        required: true
        schema:
          $ref: '#/definitions/ImageUpload'
      responses:
        200:
          description: Image was successfully uploaded
        400:
          description: Bad Request
        500:
          description: Unexpected Error

  /v1/fridges/tag:
    post:
      tags:
        - fridge
      summary: adds a tag
      operationId: addTag
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Add Tag
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        200:
          description: Tag was successfully added
        400:
          description: Bad Request
        409:
          description: Tag already exists
        500:
          description: Unexpected Error
    get:
      tags:
        - fridge
      summary: gets tags
      operationId: get
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        200:
          description: success
        500:
          description: Unexpected Error



definitions:
  Tag:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: onelove

  FridgeLocationItem:
    type: object
    required:
      - lat
      - long
      - fridge_state
      - name
    properties:
      lat:
        type: number
        example: 45.235234
      long:
        type: number
        example: -35.25463
      fridge_state:
        type: string
        example: NY
      name:
        type: string
        example: thefriendlyfridge

  FridgeItemResponse:
    type: object
    required:
      - fridge_state
      - name
      - display_name
      - address
      - instagram
      - last_edited
      - info
      - url
      - neighborhood
      - organizer_email
      - food_accepts
      - food_restrictions
      - tags
      - lat
      - long
      - profile_image
      - check_in_time
      - check_in_notes
      - check_in_status
      - check_in_image
    properties:
      fridge_state:
        type: string
        example: NY
      name:
        type: string
        example: thefriendlyfridge
      display_name:
        type: string
        example: The Friendly Fridge
      address:
        type: string
        example: 1046 Broadway, Brooklyn, NY 11221
      instagram:
        type: string
        example: https://www.instagram.com/thefriendlyfridge/
      last_ediited:
        type: integer
        example: 13524346
      info:
        type: string
        example: The first fridge to be painted
      url:
        type: string
        example: https://linktr.ee/CollectiveFocus
      neighborhood:
        type: string
        example: bushwick
      organizer_email:
        type: string
        example: info@collectivefocus.site
      food_accepts:
        type: array
        items:
          type: string
        example: [{1: fruits}, {2: vegetables}]
      food_restrictions:
        type: array
        items:
          type: string
        example: [{3: meat}, {4: dairy}]
      tags:
        type: array
        items:
          type: string
        example: [onelove]
      lat:
        type: number
        example: 39.53422
      long:
        type: number
        example: -53.23523
      profile_image:
        type: string
        example: https://s3.amazonaws.com/bucket/path/image.png
      check_in_time:
        type: integer
        example: 1355131
      check_in_notes:
        type: string
        example: Cleaned and Stocked, everything looks great
      check_in_status:
        type: integer
        example: 1
      check_in_image:
        type: string
        example: https://s3.amazonaws.com/bucket/path/image.png

  FridgeCheckInRequest:
    type: object
    required:
      - fridge_state
      - fridge_name
      - notes
      - status
      - image
    properties:
      fridge_state:
        type: string
        example: ny
      fridge_name:
        type: string
        example: thefriendlyfridge
      notes:
        type: string
        example: the fridge doesn't have power
      status:
        type: integer
        example: 2
      image:
        type: string
        example: https://s3.amazonaws.com/bucket/path/image.png

  ImageUpload:
    type: object
    required:
      - fridge_state
      - fridge_name
      - image_binary
      - type
    properties:
      fridge_state:
        type: string
        example: ny
      fridge_name:
        type: string
        example: thefriendlyfridge
      image_binary:
        type: object
      type:
        type: object
        example: {1: check_in}
  FridgeItemRequest:
    type: object
    required:
      - fridge_state
      - name
      - display_name
      - address
      - instagram
      - info
      - url
      - neighborhood
      - organizer_email
      - food_accepts
      - food_restrictions
      - tags
      - lat
      - long
      - profile_image
    properties:
      fridge_state:
        type: string
        example: NY
      name:
        type: string
        example: thefriendlyfridge
      display_name:
        type: string
        example: The Friendly Fridge
      address:
        type: string
        example: 1046 Broadway, Brooklyn, NY 11221
      instagram:
        type: string
        example: https://www.instagram.com/thefriendlyfridge/
      info:
        type: string
        example: The first fridge to be painted
      url:
        type: string
        example: https://linktr.ee/CollectiveFocus
      neighborhood:
        type: string
        example: bushwick
      organizer_email:
        type: string
        example: info@collectivefocus.site
      food_accepts:
        type: array
        items:
          type: string
        example: [{1: fruits}, {2: vegetables}]
      food_restrictions:
        type: array
        items:
          type: string
        example: [{3: meat}, {4: dairy}]
      tags:
        type: array
        items:
          type: string
        example: [onelove]
      lat:
        type: number
        example: 39.53422
      long:
        type: number
        example: -53.23523
      profile_image:
        type: string
        example: https://s3.amazonaws.com/bucket/path/image.png

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /collectivefo/CommunityFridgeMap/1.0.0
schemes:
 - https
