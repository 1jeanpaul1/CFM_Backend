AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  CommunityFridgeMapApi

  SAM Template for CommunityFridgeMapApi

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Environment:
      Variables:
        TABLE_NAME: my-table
        FRIDGE_TABLE_NAME: fridge
        FRIDGE_REPORT_TABLE_NAME: fridge_report
        FRIDGE_HISTORY_TABLE_NAME: fridge_history
        TAG_TABLE_NAME: tag

Parameters:
  Environment:
    Type: String
    Description: Choose between local or AWS
    AllowedValues:
      - local
      - aws

##########################
##    Resources    ##
##########################
Resources:
  FridgeReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/fridge_reports
      Handler: app.lambda_handler
      Runtime: python3.9
      FunctionName: FridgeReportFunction
      Environment:
        Variables:
          Environment: !Ref Environment
      Layers:
        - !Ref CommonLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            Resource: !GetAtt FridgeReportTable.Arn
      Events:
        FridgeReport:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/fridges/{fridge_id}/reports
            Method: post
            RequestParameters:
              - method.request.path.fridge_id:
                  Required: true
                  Caching: false

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/dev/hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Layers:
        - !Ref CommonLayer
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

  FridgesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/fridges/v1
      Handler: app.lambda_handler
      Runtime: python3.9
      FunctionName: FridgesFunction
      Environment:
        Variables:
          Environment: !Ref Environment
      Layers:
        - !Ref CommonLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:getItem
            Resource: !GetAtt FridgeTable.Arn
      Events:
        GetFridge:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/fridges/{fridge_id}
            Method: get
            RequestParameters:
              - method.request.path.fridge_id:
                  Required: false
                  Caching: false
        GetFridges:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/fridges
            Method: get

  GetAllFunction: #FOR DEV TESTING PURPOSES ONLY. TODO: DELETE THIS FUNCTION
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/dev/get_all/
      Handler: app.lambda_handler
      Runtime: python3.9
      FunctionName: GetAllFunction
      Events:
        GetDocument:
          Type: Api
          Properties:
            Path: /get_all
            Method: get
            RestApiId: !Ref MyApi
      Environment:
        Variables:
          Environment: !Ref Environment
          FridgeTableName: "fridge"
      Layers:
        - !Ref CommonLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:getItem
            Resource: !GetAtt FridgeTable.Arn
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1

  LoadFridgeDataFunction: #FOR DEV TESTING PURPOSES ONLY. TODO: DELETE THIS FUNCTION
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/dev/load_fridge_data
      Handler: app.lambda_handler
      Runtime: python3.9
      FunctionName: LoadFridgeDataFunction
      Environment:
        Variables:
          Environment: !Ref Environment
      Layers:
        - !Ref CommonLayer
      Policies:
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - dynamodb:BatchWriteItem
            Resource: !GetAtt FridgeTable.Arn
    ##########################
    ##    Layers    ##
    ##########################
  CommonLayer:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: CommunityFridgeMapApiLayer
            Description: Dependencies for CommunityFridgeMapApi project
            ContentUri: dependencies/
            CompatibleRuntimes:
              - python3.7
              - python3.8
              - python3.9
            RetentionPolicy: Delete
  ##########################
  ##    DynamoDB Tables    ##
  ##########################

  FridgeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: 'id'
          AttributeType: 'S'
        -
          AttributeName: 'name'
          AttributeType: 'S'
        -
          AttributeName: "address"
          AttributeType: "S"
        -
          AttributeName: "instagram"
          AttributeType: "S"
        -
          AttributeName: "last_edited"
          AttributeType: "N"
        -
          AttributeName: "info"
          AttributeType: "S"
        -
          AttributeName: "url"
          AttributeType: "S"
        -
          AttributeName: "neighborhood"
          AttributeType: "S"
        -
          AttributeName: "organizer_email"
          AttributeType: "S"
        -
          AttributeName: "tags"
          AttributeType: "L"
        -
          AttributeName: "food_accepts"
          AttributeType: "L"
        -
          AttributeName: "food_restrictions"
          AttributeType: "L"
        -
          AttributeName: "lat"
          AttributeType: "S"
        -
          AttributeName: "long"
          AttributeType: "S"
        -
          AttributeName: "profile_image"
          AttributeType: "S"
        -
          AttributeName: "report_timestamp"
          AttributeType: "S"
        -
          AttributeName: "report_epochTimestamp"
          AttributeType: "N"
        -
          AttributeName: "report_notes"
          AttributeType: "S"
        -
          AttributeName: "report_status"
          AttributeType: "S"
        -
          AttributeName: "report_image"
          AttributeType: "S"
        -
          AttributeName: "json_data"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      TableName: !Ref FRIDGE_TABLE_NAME
      BillingMode: 'PAY_PER_REQUEST'

  FridgeReportTable:
    Type: AWS::DynamoDB::Table
    Properties:

      AttributeDefinitions:
        -
          AttributeName: 'notes'
          AttributeType: 'S'
        -
          AttributeName: "status"
          AttributeType: "N"
        -
          AttributeName: "fridge_percentage"
          AttributeType: "N"
        -
          AttributeName: "image_url"
          AttributeType: "S"
        -
          AttributeName: "fridge_id"
          KeyType: "S"
        -
          AttributeName: "timestamp"
          KeyType: "S"
        -
          AttributeName: "epochTimestamp"
          KeyType: "N"
      KeySchema:
        - #State#FridgeName
          AttributeName: "fridge_id"
          KeyType: "HASH"
        -
          AttributeName: "epochTimestamp"
          KeyType: "RANGE"
      TableName: !Ref FRIDGE_REPORT_TABLE_NAME
      BillingMode: 'PAY_PER_REQUEST'
      ScanIndexForward: true

  TagTable:
    Type: AWS::DynamoDB::Table
    Properties:

      AttributeDefinitions:
        -
          AttributeName: 'tag_name'
          AttributeType: 'S'
      KeySchema:
        -
          AttributeName: "tag_name"
          KeyType: "HASH"
      TableName: !Ref TAG_TABLE_NAME
      BillingMode: 'PAY_PER_REQUEST'

  FridgeHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:

      AttributeDefinitions:
        -
          AttributeName: 'fridge_id'
          AttributeType: 'S'
        -
          AttributeName: "address"
          AttributeType: "S"
        -
          AttributeName: "instagram"
          AttributeType: "S"
        -
          AttributeName: "last_edited"
          AttributeType: "N"
        -
          AttributeName: "info"
          AttributeType: "S"
        -
          AttributeName: "url"
          AttributeType: "S"
        -
          AttributeName: "neighborhood"
          AttributeType: "S"
        -
          AttributeName: "organizer_email"
          AttributeType: "S"
        -
          AttributeName: "tags"
          AttributeType: "L"
        -
          AttributeName: "food_accepts"
          AttributeType: "L"
        -
          AttributeName: "food_restrictions"
          AttributeType: "L"
        -
          AttributeName: "lat"
          AttributeType: "S"
        -
          AttributeName: "long"
          AttributeType: "S"
        -
          AttributeName: "profile_image"
          AttributeType: "S"
        -
          AttributeName: "report_time"
          AttributeType: "S"
        -
          AttributeName: "report_notes"
          AttributeType: "S"
        -
          AttributeName: "report_status"
          AttributeType: "S"
        -
          AttributeName: "report_image"
          AttributeType: "S"
        -
          AttributeName: "pk"
          KeyType: "S"
        -
          AttributeName: "timestamp"
          KeyType: "S"
        -
          AttributeName: "epochTimestamp"
          KeyType: "N"
      KeySchema:
        -
          AttributeName: "fridge_id"
          KeyType: "HASH"
        -
          AttributeName: "epochTimestamp"
          KeyType: "RANGE"
      TableName: !Ref FRIDGE_HISTORY_TABLE_NAME
      BillingMode: 'PAY_PER_REQUEST'


Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
